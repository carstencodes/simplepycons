---
name: "gitmodules update"
on: 
    pull_request: 
        branches: 
            - main
        paths:
            - .gitmodules
            - vendor/simple-icons
    workflow_dispatch: 
permissions:
    contents: write
jobs:
#    get-version:
#        name: "Get version to update"
#        runs-on: ubuntu-latest
#        steps:
#            - name: Checkout Sources
#              uses: actions/checkout@v4
#              with:
#                clean: true
#                submodules: false
#            - name: Get submodule version
#              run: |
#                _version=$(awk -F= '/branch/{ print $2 }' .gitmodules)
#                git submodule foreach git fetch --tags
#                git submodule git checkout tags/${_version}
#                git add vendor/simple-icons
#                git config --global user.name 'Github actions (carstencodes)'
#                git config --global user.email 'carstencodes@users.noreply.github.com'
#                git commit -m "chore(deps): Checkout submodule to tag ${_version}"
#                git push
    perform-update:
        name: "Perform update using PDM generate"
        runs-on: ubuntu-latest
#        needs: 
#            - get-version
        steps:
            - uses: actions/checkout@v4
              with:
                clean: true
                submodules: true
            - name: Setup PDM
              uses: pdm-project/setup-pdm@v4
            - name: Install dependencies
              run: | 
                pdm install -d -G:all
                pdm install --plugins
            - name: Setup git configuration
              run: |
                git checkout ${{ github.head_ref }}
                git config --global user.name 'Github actions (carstencodes)'
                git config --global user.email 'carstencodes@users.noreply.github.com'
            - name: Setup new version
              run: |
                _epoch=$(pdm show --version | awk -F! '{ print $1 }')
                _version=$(awk -F= '/branch/{ print $2 }' .gitmodules)
                _new_version=$(echo "${_epoch}!${_version}")
                _old_version=$(pdm show --version)
                sed -i "s/${_old_version}/${_new_version}/g" pyproject.toml
                git add pyproject.toml
                git commit -m "chore: Update version from ${_old_version} to ${_new_version}"
            - name: Generate new Icons
              run: pdm generate
            - name: Check-in differences
              run: |
                git add src/simplepycons
                git commit -m "chore: Updated icons according to new tags"
            - name: Push changes
              run: git push origin HEAD
